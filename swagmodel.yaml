openapi: 3.0.1
info:
  title: Equator API
  description: 'This is a sample server Petstore server.  You can find out more about     Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For
    this sample, you can use the api key `special-key` to test the authorization     filters.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://petstore.swagger.io/v2
- url: http://petstore.swagger.io/v2
tags:
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
paths:
  /comment:
    post:
      tags:
      - comment
      summary: Create a new comment
      description: This can only be done by the logged in user.
      operationId: createComment
      requestBody:
        description: Enter a new comment
        content:
          '*/*':
            schema: 
              $ref: '#/components/schemas/comment'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /comment/listCommentByTopic/{topic}:
    post:
      tags:
      - comment
      summary: Lists all the comments for a given topic
      operationId: listCommentByTopic
      parameters:
      - name: topic
        in: path
        description: the path needs to be supplied
        required: true
        schema:
          type: string
      responses:
        200:
          description: List of comment
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'
        400:
          description: invalid topic supplied
          content: {}
        404:
          description: comments not found
          content: {}
  /comment/{id}:
    get:
      tags:
      - comment
      summary: Get comment by its id
      operationId: getCommentByID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/comment'
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
        400:
          description: Invalid id supplied
          content: {}
        404:
          description: comment not found
          content: {}
    put:
      tags:
      - comment
      summary: edit a comment
      description: This can only be done by the logged in user.
      operationId: editComment
      parameters:
      - name: id
        in: path
        description: comment that need to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: supply a new comment
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/comment'
        required: true
      responses:
        200:
          description: edited your comment
          content: {}
        400:
          description: Invalid id supplied
          content: {}
        404:
          description: comment not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - comment
      summary: Delete a comment
      description: This can only be done by the logged in user.
      operationId: deleteComment
      parameters:
      - name: id
        in: path
        description: The comment that needs to be deleted
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successfully deleted the comment
          content: {}
        400:
          description: Invalid id supplied
          content: {}
        404:
          description: comment not found
          content: {}
components:
  schemas:
    comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        contents:
          type: string
        topic:
          type: string
      xml:
        name: comment